% FINUFFT3D1   3D complex nonuniform FFT of type 1 (nonuniform to uniform).
%
% f = finufft3d1(x,y,z,c,isign,eps,ms,mt,mu)
% f = finufft3d1(x,y,z,c,isign,eps,ms,mt,mu,opts)
%
% This computes, to relative precision eps, via a fast algorithm:
%
%                       nj
%     f[k1,k2,k3] =    SUM  c[j] exp(+-i (k1 x[j] + k2 y[j] + k3 z[j]))
%                      j=1
%
%     for -ms/2 <= k1 <= (ms-1)/2,  -mt/2 <= k2 <= (mt-1)/2,
%         -mu/2 <= k3 <= (mu-1)/2.
%
%   Inputs:
%     x,y,z real-valued coordinates of nonuniform sources,
%           each a length-nj vector
%     c     length-nj complex vector of source strengths. If numel(c)>nj,
%           expects a stack of vectors (eg, a nj*ntrans matrix) each of which is
%           transformed with the same source locations.
ISIGNEPS
%     ms,mt,mu  number of Fourier modes requested in x,y and z; each may be
%           even or odd.
%           In either case the mode range is integers lying in [-m/2, (m-1)/2]
OPTS
OPTS12
%   Outputs:
%     f     size (ms,mt,mu) complex array of Fourier coefficients
%           (ordering given by opts.modeord in each dimension; ms fastest, mu
%           slowest), or, if ntrans>1, a 4D array of size (ms,mt,mu,ntrans).
%
NOTES
