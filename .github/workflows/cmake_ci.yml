name: cmake ci linux macos windows
on:
  push:
  release:
    types: [published]

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate_matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Generate matrix
        id: generate_matrix
        run: |
          echo "MACOSX_DEPLOYMENT_TARGET=11.0" >> $GITHUB_ENV 
          MATRIX=$(python3 ${{ github.workspace }}/.github/workflows/generate_cmake_matrix.py)
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
  cmake-ci:
    runs-on: ${{ matrix.os }}
    needs: prepare
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows') }}
          cmake: false
          ninja: false
          vcpkg: false
          cppcheck: false
          clangtidy: false
      - name: Set min macOS version and install fftw
        if: runner.os == 'macOS'
        run: |
          brew install fftw
      - name: Install fftw
        if: runner.os == 'linux'
        run: |
          sudo apt update
          sudo apt install -y libfftw3-dev
      - name: Configure Cmake
        run: |
          cmake -S . -B ./build -DCMAKE_BUILD_TYPE:STRING=${{matrix.build_type}} -DFINUFFT_BUILD_TESTS=ON -DFINUFFT_STATIC_LINKING=${{matrix.finufft_static_linking}}

      - name: Build
        run: |
          cmake --build ./build --config ${{matrix.build_type}}

      - name: Test
        working-directory: ./build
        run: |
          ctest -C ${{matrix.build_type}}

      # may change to cpack and action-gh-release later
      - name: Upload static and shared lib
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.os}}-${{matrix.compiler}}-${{matrix.build_type}}-finufft-lib
          path: ${{runner.workspace}}/finufft/build/*finufft*

      - name: Pack For Release
        if: startsWith(github.ref, 'refs/tags/') && github.event_name == 'release' && github.event.action == 'published' && matrix.build_type == 'Release'
        shell: bash
        run: |
          cd build
          if [[ "${{ matrix.os }}" == "windows-2022" ]]
          then
            7z a ../${{matrix.os}}-${{matrix.compiler}}-finufft-lib.zip *finufft*
          else
            tar czvf ../${{matrix.os}}-${{matrix.compiler}}-finufft-lib.tar.gz *finufft*
          fi
          cd -

      - name: Publish
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') && github.event_name == 'release' && github.event.action == 'published'
        with:
          files: |
            *-finufft-lib*
