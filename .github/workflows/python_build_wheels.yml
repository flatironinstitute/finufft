name: Build and test Python wheels

on: [push, pull_request]

jobs:
  build_wheels_unix:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13]

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.2
        with:
          package-dir: 'python/finufft'
        env:
          CIBW_BEFORE_ALL_MACOS: brew install gcc@14 fftw
          CIBW_ARCHS_MACOS: "x86_64"
          # Need following versions of GCC for compatibility with fftw
          # installed by homebrew. Similarly, we set the macOS version
          # for compatibility with those libraries.
          CIBW_ENVIRONMENT_MACOS: >
            CC=gcc-14
            CXX=g++-14
            MACOSX_DEPLOYMENT_TARGET=13

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  build_wheels_macos_arm64:
    name: Build wheels on macos-14
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.2
        with:
          package-dir: 'python/finufft'
        env:
          CIBW_ARCHS_MACOS: "arm64"
          # Make sure to install the ARM64-specific versions of FFTW and GCC.
          # Perhaps this is done automatically on the macos-14 image. We should
          # look into this further.
          CIBW_BEFORE_ALL_MACOS: |
            pkg=$(brew fetch --force --bottle-tag=arm64_ventura fftw | grep 'Downloaded to' | cut -d' ' -f3)
            brew install $pkg
            pkg=$(brew fetch --force --bottle-tag=arm64_ventura gcc | grep 'Downloaded to' | cut -d' ' -f3)
            brew install $pkg
          CIBW_ENVIRONMENT_MACOS: >
            CC=gcc-14
            CXX=g++-14
            MACOSX_DEPLOYMENT_TARGET=14

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-macos-arm64
          path: ./wheelhouse/*.whl

  build_wheels_win:
    name: Build wheels on windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          # Here we install the mingw64 versions of gcc and FFTW that we will
          # use to compile the library. We also need pkg-config so that cmake
          # can easily find FFTW when configurating the build.
          c:\msys64\usr\bin\pacman.exe -Sy --noconfirm mingw-w64-x86_64-gcc mingw-w64-x86_64-fftw mingw-w64-x86_64-pkgconf
          # This particular install of mingw64 *is not* in the path by default
          # (another one at c:\mingw64 is, however), so we add it to the path.
          echo "c:\msys64\mingw64\bin;" >> $env:GITHUB_PATH

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.2
        with:
          package-dir: 'python/finufft'
        env:
          # This is required to force cmake to avoid using MSVC (the default).
          # By setting the generator to Ninja, cmake will pick gcc (mingw64)
          # as the compiler.
          CIBW_CONFIG_SETTINGS: "cmake.args='-G Ninja'"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-windows
          path: ./wheelhouse/*.whl
