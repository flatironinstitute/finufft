spreadtestnd output:
what CPUs do I have?...
(I'm in a linux OS)
model name	: AMD Ryzen 7 4800H with Radeon Graphics
Architecture:                         x86_64
CPU op-mode(s):                       32-bit, 64-bit
Address sizes:                        48 bits physical, 48 bits virtual
Byte Order:                           Little Endian
CPU(s):                               16
On-line CPU(s) list:                  0-15
Vendor ID:                            AuthenticAMD
Model name:                           AMD Ryzen 7 4800H with Radeon Graphics
CPU family:                           23
Model:                                96
Thread(s) per core:                   2
Core(s) per socket:                   8
Socket(s):                            1
Stepping:                             1
Frequency boost:                      enabled
CPU(s) scaling MHz:                   134%
CPU max MHz:                          2900,0000
CPU min MHz:                          1400,0000
BogoMIPS:                             5789,17
Flags:                                fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid extd_apicid aperfmperf rapl pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate ssbd mba ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr rdpru wbnoinvd cppc arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif v_spec_ctrl umip rdpid overflow_recov succor smca
Virtualization:                       AMD-V
L1d cache:                            256 KiB (8 instances)
L1i cache:                            256 KiB (8 instances)
L2 cache:                             4 MiB (8 instances)
L3 cache:                             8 MiB (2 instances)
NUMA node(s):                         1
NUMA node0 CPU(s):                    0-15
Vulnerability Gather data sampling:   Not affected
Vulnerability Itlb multihit:          Not affected
Vulnerability L1tf:                   Not affected
Vulnerability Mds:                    Not affected
Vulnerability Meltdown:               Not affected
Vulnerability Mmio stale data:        Not affected
Vulnerability Reg file data sampling: Not affected
Vulnerability Retbleed:               Mitigation; untrained return thunk; SMT enabled with STIBP protection
Vulnerability Spec rstack overflow:   Mitigation; Safe RET
Vulnerability Spec store bypass:      Mitigation; Speculative Store Bypass disabled via prctl
Vulnerability Spectre v1:             Mitigation; usercopy/swapgs barriers and __user pointer sanitization
Vulnerability Spectre v2:             Mitigation; Retpolines; IBPB conditional; STIBP always-on; RSB filling; PBRSB-eIBRS Not affected; BHI Not affected
Vulnerability Srbds:                  Not affected
Vulnerability Tsx async abort:        Not affected

double-precision 8-thread tests: #NU = 1e6, #U = 1e6, tol = 1e-6...
making random data...
spreadinterp 1D, 1e+06 U pts, dir=1, tol=1e-06: nspread=7
    1e+06 NU pts in 0.0166 s 	6.04e+07 pts/s 	4.23e+08 spread pts/s
    rel err in total over grid:      6.24e-07
making more random NU pts...
spreadinterp 1D, 1e+06 U pts, dir=2, tol=1e-06: nspread=7
    1e+06 NU pts in 0.0116 s 	8.62e+07 pts/s 	6.03e+08 spread pts/s
    max rel err in values at NU pts: 1.13e-06
making random data...
spreadinterp 2D, 1e+06 U pts, dir=1, tol=1e-06: nspread=7
    1e+06 NU pts in 0.0314 s 	3.18e+07 pts/s 	1.56e+09 spread pts/s
    rel err in total over grid:      4.55e-07
making more random NU pts...
spreadinterp 2D, 1e+06 U pts, dir=2, tol=1e-06: nspread=7
    1e+06 NU pts in 0.0171 s 	5.85e+07 pts/s 	2.87e+09 spread pts/s
    max rel err in values at NU pts: 2.27e-06
making random data...
spreadinterp 3D, 1e+06 U pts, dir=1, tol=1e-06: nspread=7
    1e+06 NU pts in 0.0592 s 	1.69e+07 pts/s 	5.79e+09 spread pts/s
    rel err in total over grid:      1.46e-06
making more random NU pts...
spreadinterp 3D, 1e+06 U pts, dir=2, tol=1e-06: nspread=7
    1e+06 NU pts in 0.0311 s 	3.21e+07 pts/s 	1.1e+10 spread pts/s
    max rel err in values at NU pts: 3.33e-06

double-precision 1-thread tests: #NU = 1e6, #U = 1e6, tol = 1e-6...
making random data...
spreadinterp 1D, 1e+06 U pts, dir=1, tol=1e-06: nspread=7
    1e+06 NU pts in 0.0316 s 	3.16e+07 pts/s 	2.21e+08 spread pts/s
    rel err in total over grid:      8.07e-07
making more random NU pts...
spreadinterp 1D, 1e+06 U pts, dir=2, tol=1e-06: nspread=7
    1e+06 NU pts in 0.0468 s 	2.14e+07 pts/s 	1.5e+08 spread pts/s
    max rel err in values at NU pts: 1.13e-06
making random data...
spreadinterp 2D, 1e+06 U pts, dir=1, tol=1e-06: nspread=7
    1e+06 NU pts in 0.0584 s 	1.71e+07 pts/s 	8.39e+08 spread pts/s
    rel err in total over grid:      1.05e-06
making more random NU pts...
spreadinterp 2D, 1e+06 U pts, dir=2, tol=1e-06: nspread=7
    1e+06 NU pts in 0.074 s 	1.35e+07 pts/s 	6.62e+08 spread pts/s
    max rel err in values at NU pts: 2.26e-06
making random data...
spreadinterp 3D, 1e+06 U pts, dir=1, tol=1e-06: nspread=7
    1e+06 NU pts in 0.176 s 	5.69e+06 pts/s 	1.95e+09 spread pts/s
    rel err in total over grid:      1.93e-06
making more random NU pts...
spreadinterp 3D, 1e+06 U pts, dir=2, tol=1e-06: nspread=7
    1e+06 NU pts in 0.168 s 	5.94e+06 pts/s 	2.04e+09 spread pts/s
    max rel err in values at NU pts: 3.37e-06
